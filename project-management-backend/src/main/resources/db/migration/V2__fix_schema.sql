-- V2__fix_schema.sql
-- Fixes schema issues for production

-- ----------------------
-- Recreate tables cleanly
-- ----------------------

-- Users
CREATE TABLE public.users (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    username varchar(255) NOT NULL,
    email varchar(255) NOT NULL,
    password varchar(255) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (username),
    UNIQUE (email)
);

-- Roles
CREATE TABLE public.roles (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(255) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE (name)
);

-- User Roles
CREATE TABLE public.user_roles (
    user_id bigint NOT NULL,
    role_id bigint NOT NULL,
    PRIMARY KEY (user_id, role_id),
    FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES public.roles(id) ON DELETE CASCADE
);

-- Teams
CREATE TABLE public.teams (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(255) NOT NULL,
    description varchar(255),
    PRIMARY KEY (id),
    UNIQUE (name)
);

-- Team Members
CREATE TABLE public.team_members (
    team_id bigint NOT NULL,
    user_id bigint NOT NULL,
    PRIMARY KEY (team_id, user_id),
    FOREIGN KEY (team_id) REFERENCES public.teams(id),
    FOREIGN KEY (user_id) REFERENCES public.users(id)
);

-- Projects
CREATE TABLE public.project (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(100) NOT NULL,
    description text,
    start_date date NOT NULL,
    end_date date,
    status varchar(255) NOT NULL CHECK (status IN ('PLANNING','ACTIVE','ON_HOLD','COMPLETED','CANCELLED')),
    created_by_id bigint NOT NULL,
    team_id bigint,
    PRIMARY KEY (id),
    FOREIGN KEY (created_by_id) REFERENCES public.users(id),
    FOREIGN KEY (team_id) REFERENCES public.teams(id)
);

-- Project Members
CREATE TABLE public.project_members (
    project_id bigint NOT NULL,
    user_id bigint NOT NULL,
    PRIMARY KEY (project_id, user_id),
    FOREIGN KEY (project_id) REFERENCES public.project(id),
    FOREIGN KEY (user_id) REFERENCES public.users(id)
);

-- Tasks
CREATE TABLE public.task (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    title varchar(200) NOT NULL,
    description text,
    created_at timestamp NOT NULL DEFAULT now(),
    due_date date NOT NULL,
    priority varchar(255) NOT NULL CHECK (priority IN ('LOW','MEDIUM','HIGH','CRITICAL')),
    status varchar(255) NOT NULL CHECK (status IN ('TO_DO','IN_PROGRESS','REVIEW','DONE')),
    assignee_user_id bigint,
    creator_user_id bigint,
    project_id bigint NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (assignee_user_id) REFERENCES public.users(id),
    FOREIGN KEY (creator_user_id) REFERENCES public.users(id),
    FOREIGN KEY (project_id) REFERENCES public.project(id)
);
