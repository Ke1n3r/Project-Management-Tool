/* tslint:disable */
/* eslint-disable */
/**
 * Project Management Tool API
 * API documentation for Project Management Tool
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDto } from './user-dto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
    UserDtoToJSONTyped,
} from './user-dto';
import type { TeamDto } from './team-dto';
import {
    TeamDtoFromJSON,
    TeamDtoFromJSONTyped,
    TeamDtoToJSON,
    TeamDtoToJSONTyped,
} from './team-dto';

/**
 * 
 * @export
 * @interface ProjectDto
 */
export interface ProjectDto {
    /**
     * 
     * @type {number}
     * @memberof ProjectDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ProjectDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectDto
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof ProjectDto
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProjectDto
     */
    endDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof ProjectDto
     */
    status?: ProjectDtoStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof ProjectDto
     */
    createdById?: number;
    /**
     * 
     * @type {TeamDto}
     * @memberof ProjectDto
     */
    team?: TeamDto;
    /**
     * 
     * @type {number}
     * @memberof ProjectDto
     */
    memberCount?: number;
    /**
     * 
     * @type {Array<UserDto>}
     * @memberof ProjectDto
     */
    members?: Array<UserDto>;
    /**
     * 
     * @type {number}
     * @memberof ProjectDto
     */
    taskCount?: number;
}


/**
 * @export
 */
export const ProjectDtoStatusEnum = {
    Planning: 'PLANNING',
    Active: 'ACTIVE',
    OnHold: 'ON_HOLD',
    Completed: 'COMPLETED',
    Cancelled: 'CANCELLED'
} as const;
export type ProjectDtoStatusEnum = typeof ProjectDtoStatusEnum[keyof typeof ProjectDtoStatusEnum];


/**
 * Check if a given object implements the ProjectDto interface.
 */
export function instanceOfProjectDto(value: object): value is ProjectDto {
    return true;
}

export function ProjectDtoFromJSON(json: any): ProjectDto {
    return ProjectDtoFromJSONTyped(json, false);
}

export function ProjectDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'status': json['status'] == null ? undefined : json['status'],
        'createdById': json['createdById'] == null ? undefined : json['createdById'],
        'team': json['team'] == null ? undefined : TeamDtoFromJSON(json['team']),
        'memberCount': json['memberCount'] == null ? undefined : json['memberCount'],
        'members': json['members'] == null ? undefined : ((json['members'] as Array<any>).map(UserDtoFromJSON)),
        'taskCount': json['taskCount'] == null ? undefined : json['taskCount'],
    };
}

export function ProjectDtoToJSON(json: any): ProjectDto {
    return ProjectDtoToJSONTyped(json, false);
}

export function ProjectDtoToJSONTyped(value?: ProjectDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'startDate': value['startDate'] == null ? value['startDate'] : value['startDate'].toISOString().substring(0,10),
        'endDate': value['endDate'] == null ? value['endDate'] : value['endDate'].toISOString().substring(0,10),
        'status': value['status'],
        'createdById': value['createdById'],
        'team': TeamDtoToJSON(value['team']),
        'memberCount': value['memberCount'],
        'members': value['members'] == null ? undefined : ((value['members'] as Array<any>).map(UserDtoToJSON)),
        'taskCount': value['taskCount'],
    };
}

