/* tslint:disable */
/* eslint-disable */
/**
 * Project Management Tool API
 * API documentation for Project Management Tool
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDto } from './user-dto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
    UserDtoToJSONTyped,
} from './user-dto';

/**
 * 
 * @export
 * @interface TeamDto
 */
export interface TeamDto {
    /**
     * 
     * @type {number}
     * @memberof TeamDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TeamDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TeamDto
     */
    description?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof TeamDto
     */
    memberEmails?: Array<string>;
    /**
     * 
     * @type {Array<UserDto>}
     * @memberof TeamDto
     */
    members?: Array<UserDto>;
    /**
     * 
     * @type {number}
     * @memberof TeamDto
     */
    companyId?: number;
}

/**
 * Check if a given object implements the TeamDto interface.
 */
export function instanceOfTeamDto(value: object): value is TeamDto {
    return true;
}

export function TeamDtoFromJSON(json: any): TeamDto {
    return TeamDtoFromJSONTyped(json, false);
}

export function TeamDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'memberEmails': json['memberEmails'] == null ? undefined : json['memberEmails'],
        'members': json['members'] == null ? undefined : ((json['members'] as Array<any>).map(UserDtoFromJSON)),
        'companyId': json['companyId'] == null ? undefined : json['companyId'],
    };
}

export function TeamDtoToJSON(json: any): TeamDto {
    return TeamDtoToJSONTyped(json, false);
}

export function TeamDtoToJSONTyped(value?: TeamDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'memberEmails': value['memberEmails'],
        'members': value['members'] == null ? undefined : ((value['members'] as Array<any>).map(UserDtoToJSON)),
        'companyId': value['companyId'],
    };
}

