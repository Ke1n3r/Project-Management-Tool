/* tslint:disable */
/* eslint-disable */
/**
 * Project Management Tool API
 * API documentation for Project Management Tool
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { UserDtoFromJSON, UserDtoToJSON, } from './user-dto';
import { TeamDtoFromJSON, TeamDtoToJSON, } from './team-dto';
/**
 * @export
 */
export const ProjectDtoStatusEnum = {
    Planning: 'PLANNING',
    Active: 'ACTIVE',
    OnHold: 'ON_HOLD',
    Completed: 'COMPLETED',
    Cancelled: 'CANCELLED'
};
/**
 * Check if a given object implements the ProjectDto interface.
 */
export function instanceOfProjectDto(value) {
    return true;
}
export function ProjectDtoFromJSON(json) {
    return ProjectDtoFromJSONTyped(json, false);
}
export function ProjectDtoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'status': json['status'] == null ? undefined : json['status'],
        'createdBy': json['createdBy'] == null ? undefined : UserDtoFromJSON(json['createdBy']),
        'team': json['team'] == null ? undefined : TeamDtoFromJSON(json['team']),
        'memberCount': json['memberCount'] == null ? undefined : json['memberCount'],
        'members': json['members'] == null ? undefined : (json['members'].map(UserDtoFromJSON)),
        'taskCount': json['taskCount'] == null ? undefined : json['taskCount'],
    };
}
export function ProjectDtoToJSON(json) {
    return ProjectDtoToJSONTyped(json, false);
}
export function ProjectDtoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'startDate': value['startDate'] == null ? value['startDate'] : value['startDate'].toISOString().substring(0, 10),
        'endDate': value['endDate'] == null ? value['endDate'] : value['endDate'].toISOString().substring(0, 10),
        'status': value['status'],
        'createdBy': UserDtoToJSON(value['createdBy']),
        'team': TeamDtoToJSON(value['team']),
        'memberCount': value['memberCount'],
        'members': value['members'] == null ? undefined : (value['members'].map(UserDtoToJSON)),
        'taskCount': value['taskCount'],
    };
}
